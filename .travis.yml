<<<<<<< HEAD
dist: xenial # Ubuntu 16.04
language: bash

env:
  - tf_version=0.12.19 tf_init_cli_options="-input=false" tf_validation_cli_options="" tf_plan_cli_options="-lock=false -input=false" tf_apply_cli_options="-auto-approve -input=false"

=======
os: linux  # The default OS
dist: bionic # Ubuntu 18.04
arch: arm64 # Architecture signifying a containerized version of Linux to boot faster
language: bash
# Only build pushes to master branch
>>>>>>> test
branches:
  only:
    - master

<<<<<<< HEAD
=======
# Export variables
env:
  - tf_version=0.12.25 tf_init_cli_options="-input=false" tf_validation_cli_options="" tf_plan_cli_options="-lock=false -input=false" tf_apply_cli_options="-auto-approve -input=false"

# Install dependencies
>>>>>>> test
before_install:
  - wget https://releases.hashicorp.com/terraform/"$tf_version"/terraform_"$tf_version"_linux_amd64.zip
  - unzip terraform_"$tf_version"_linux_amd64.zip
  - sudo mv terraform /usr/local/bin/
  - rm terraform_"$tf_version"_linux_amd64.zip

# Terraform Plan and Apply
# Plan only on pull requests, Apply on merged code
jobs:
  include:
    - stage: terraform plan
      # Only run terraform validate and plan state if within a pull request
<<<<<<< HEAD
      if: type IN (pull_request)
      script:
        - echo "Executing Terraform Plan on pull request code"
=======
      if: type IN (pull_request, api)
      script:
        - echo "Validating Terraform fmt"
        - terraform fmt -recursive -check
        - echo "Pull request detected, creating change plan"
>>>>>>> test
        - terraform init $tf_init_cli_options
        - terraform validate $tf_validation_cli_options
        - terraform plan $tf_plan_cli_options
    - stage: terraform apply
      # Only run terraform apply stage if outside of a pull request
      if: type IN (push) and branch = master
      script:
<<<<<<< HEAD
        - echo "Executing Terraform Apply on merged code"
=======
        - echo "Merge detected, executing changes"
>>>>>>> test
        - terraform init $tf_init_cli_options
        - terraform apply $tf_apply_cli_options